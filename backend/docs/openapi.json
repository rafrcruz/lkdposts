{
  "openapi": "3.1.0",
  "info": {
    "title": "lkdposts API",
    "version": "1.0.0",
    "description": "API responsável por disponibilizar funcionalidades de automação de posts.",
    "x-generated-at": "2025-09-25T16:37:38.453Z",
    "x-environment": "development"
  },
  "servers": [
    {
      "url": "/api/v1",
      "description": "API v1"
    }
  ],
  "components": {
    "schemas": {
      "Envelope": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": [
              "object",
              "null"
            ]
          },
          "meta": {
            "type": "object",
            "properties": {
              "requestId": {
                "type": "string",
                "format": "uuid",
                "example": "00000000-0000-4000-8000-000000000000"
              }
            }
          }
        }
      },
      "ErrorEnvelope": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "INTERNAL_SERVER_ERROR"
              },
              "message": {
                "type": "string",
                "example": "Internal server error"
              },
              "details": {
                "type": [
                  "object",
                  "null"
                ],
                "example": null
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "requestId": {
                "type": "string",
                "format": "uuid",
                "example": "00000000-0000-4000-8000-000000000000"
              }
            }
          }
        }
      },
      "Feed": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/rss.xml"
          },
          "title": {
            "type": [
              "string",
              "null"
            ],
            "example": "My RSS feed"
          },
          "lastFetchedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "example": null
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-20T12:34:56.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-20T12:34:56.000Z"
          }
        }
      },
      "AllowedUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "admin@example.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ],
            "example": "admin"
          },
          "immutable": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-20T12:34:56.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-20T12:34:56.000Z"
          }
        }
      },
      "AppParams": {
        "type": "object",
        "properties": {
          "posts_refresh_cooldown_seconds": {
            "type": "integer",
            "minimum": 0,
            "example": 3600
          },
          "posts_time_window_days": {
            "type": "integer",
            "minimum": 1,
            "example": 7
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-20T12:34:56.000Z"
          },
          "updated_by": {
            "type": [
              "string",
              "null"
            ],
            "example": "admin@example.com"
          }
        }
      },
      "AllowlistListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedUser"
            }
          }
        }
      },
      "AllowlistCreateRequest": {
        "type": "object",
        "required": [
          "email",
          "role"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ],
            "example": "user"
          }
        }
      },
      "AllowlistUpdateRoleRequest": {
        "type": "object",
        "required": [
          "role"
        ],
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ],
            "example": "admin"
          }
        }
      },
      "AllowlistRemovalResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Allowlist entry removed"
          }
        }
      },
      "AuthGoogleLoginRequest": {
        "type": "object",
        "required": [
          "idToken"
        ],
        "properties": {
          "idToken": {
            "type": "string",
            "description": "Google ID token obtained from the client SDK.",
            "example": "ya29.a0AfH6SMCg..."
          }
        }
      },
      "AuthSession": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ],
            "example": "user"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-20T13:45:00.000Z"
          }
        }
      },
      "AuthLogoutResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Logged out"
          }
        }
      },
      "AuthDebugReport": {
        "type": "object",
        "properties": {
          "origin": {
            "type": [
              "string",
              "null"
            ],
            "example": "https://app.example.com"
          },
          "hasCookie": {
            "type": "boolean",
            "example": true
          },
          "cookieNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "lkdposts_session"
            ]
          },
          "authenticated": {
            "type": "boolean",
            "example": true
          },
          "userIdOrEmail": {
            "type": [
              "string",
              "null"
            ],
            "example": "user@example.com"
          },
          "release": {
            "type": [
              "string",
              "null"
            ],
            "example": "2025.01.20-abcdef"
          }
        }
      },
      "FeedDuplicateEntry": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/rss.xml"
          },
          "reason": {
            "type": "string",
            "example": "ALREADY_EXISTS",
            "description": "Reason why the URL could not be created."
          },
          "feedId": {
            "type": [
              "integer",
              "null"
            ],
            "example": 12,
            "description": "Existing feed identifier when the duplicate already exists in the database."
          }
        }
      },
      "FeedInvalidEntry": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "notaurl"
          },
          "reason": {
            "type": "string",
            "example": "INVALID_URL",
            "description": "Validation reason for rejecting the URL."
          }
        }
      },
      "FeedBulkResult": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "description": "Feeds successfully created for the user.",
            "items": {
              "$ref": "#/components/schemas/Feed"
            }
          },
          "duplicates": {
            "type": "array",
            "description": "URLs skipped because they already exist or were repeated in the payload.",
            "items": {
              "$ref": "#/components/schemas/FeedDuplicateEntry"
            }
          },
          "invalid": {
            "type": "array",
            "description": "URLs rejected due to validation errors.",
            "items": {
              "$ref": "#/components/schemas/FeedInvalidEntry"
            }
          }
        }
      },
      "FeedDeletionResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Feed removed"
          }
        }
      },
      "FeedResetResult": {
        "type": "object",
        "properties": {
          "feedsResetCount": {
            "type": "integer",
            "example": 12
          },
          "articlesDeletedCount": {
            "type": "integer",
            "example": 480
          },
          "postsDeletedCount": {
            "type": "integer",
            "example": 480
          },
          "durationMs": {
            "type": "integer",
            "example": 85
          }
        }
      },
      "FeedRefreshSummary": {
        "type": "object",
        "properties": {
          "feedId": {
            "type": "integer",
            "example": 42
          },
          "feedUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://news.example.com/rss"
          },
          "feedTitle": {
            "type": [
              "string",
              "null"
            ],
            "example": "News"
          },
          "skippedByCooldown": {
            "type": "boolean",
            "example": false
          },
          "cooldownSecondsRemaining": {
            "type": "integer",
            "example": 0
          },
          "itemsRead": {
            "type": "integer",
            "example": 25
          },
          "itemsWithinWindow": {
            "type": "integer",
            "example": 8
          },
          "articlesCreated": {
            "type": "integer",
            "example": 3
          },
          "duplicates": {
            "type": "integer",
            "example": 2
          },
          "invalidItems": {
            "type": "integer",
            "example": 1
          },
          "error": {
            "type": [
              "object",
              "null"
            ],
            "example": null,
            "properties": {
              "message": {
                "type": "string",
                "example": "Feed request timed out"
              }
            },
            "description": "Error returned when the feed fetch failed. Null when the refresh completed successfully."
          }
        }
      },
      "FeedRefreshResponse": {
        "type": "object",
        "properties": {
          "now": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-20T12:34:56.000Z"
          },
          "feeds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeedRefreshSummary"
            }
          }
        }
      },
      "PostGenerationProgress": {
        "type": "object",
        "nullable": true,
        "properties": {
          "ownerKey": {
            "type": "string",
            "example": "1"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-20T12:34:56.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-20T12:35:10.000Z"
          },
          "finishedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "example": null
          },
          "status": {
            "type": "string",
            "enum": [
              "idle",
              "in_progress",
              "completed",
              "failed"
            ],
            "example": "in_progress"
          },
          "phase": {
            "type": "string",
            "enum": [
              "initializing",
              "resolving_params",
              "loading_prompts",
              "collecting_articles",
              "generating_posts",
              "finalizing",
              "completed",
              "failed"
            ],
            "example": "generating_posts"
          },
          "message": {
            "type": [
              "string",
              "null"
            ],
            "example": "Gerando post 2 de 5..."
          },
          "eligibleCount": {
            "type": [
              "integer",
              "null"
            ],
            "example": 5
          },
          "processedCount": {
            "type": "integer",
            "example": 2
          },
          "generatedCount": {
            "type": "integer",
            "example": 2
          },
          "failedCount": {
            "type": "integer",
            "example": 0
          },
          "skippedCount": {
            "type": "integer",
            "example": 1
          },
          "currentArticleId": {
            "type": [
              "integer",
              "null"
            ],
            "example": 42
          },
          "currentArticleTitle": {
            "type": [
              "string",
              "null"
            ],
            "example": "Exemplo de notícia"
          },
          "promptBaseHash": {
            "type": [
              "string",
              "null"
            ],
            "example": "e3b0c44298fc1c149afbf4c8996fb924"
          },
          "modelUsed": {
            "type": [
              "string",
              "null"
            ],
            "example": "gpt-5-nano"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostGenerationErrorEntry"
            }
          },
          "cacheInfo": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "cachedTokens": {
                "type": "integer",
                "example": 1200
              }
            }
          },
          "summary": {
            "type": [
              "object",
              "null"
            ]
          }
        }
      },
      "PostGenerationErrorEntry": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": [
              "integer",
              "null"
            ],
            "example": 123
          },
          "reason": {
            "type": "string",
            "example": "OpenAI request timed out"
          }
        }
      },
      "PostsCleanupResult": {
        "type": "object",
        "properties": {
          "removedArticles": {
            "type": "integer",
            "example": 12
          },
          "removedPosts": {
            "type": "integer",
            "example": 12
          }
        }
      },
      "PostFeedReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 7
          },
          "title": {
            "type": [
              "string",
              "null"
            ],
            "example": "Tech Newsletter"
          },
          "url": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri",
            "example": "https://tech.example.com/rss"
          }
        }
      },
      "PostContent": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "example": "2025-01-20T12:35:30.000Z"
          }
        }
      },
      "PostListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 99
          },
          "title": {
            "type": "string",
            "example": "Latest tech news"
          },
          "contentSnippet": {
            "type": "string",
            "example": "Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-20T10:00:00.000Z"
          },
          "feed": {
            "type": [
              "object",
              "null"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PostFeedReference"
              }
            ],
            "example": {
              "id": 7,
              "title": "Tech Newsletter",
              "url": "https://tech.example.com/rss"
            }
          },
          "post": {
            "type": [
              "object",
              "null"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PostContent"
              }
            ],
            "example": {
              "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
              "createdAt": "2025-01-20T12:36:00.000Z"
            }
          }
        }
      },
      "PostListResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostListItem"
            }
          }
        }
      },
      "IngestionDiagnosticEntry": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": [
              "integer",
              "null"
            ],
            "example": 101
          },
          "feedId": {
            "type": [
              "integer",
              "null"
            ],
            "example": 1
          },
          "feedTitle": {
            "type": [
              "string",
              "null"
            ],
            "example": "Example Feed"
          },
          "itemTitle": {
            "type": [
              "string",
              "null"
            ],
            "example": "Example item"
          },
          "canonicalUrl": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri",
            "example": "https://example.com/item-101"
          },
          "publishedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "example": "2025-01-20T10:00:00.000Z"
          },
          "chosenSource": {
            "type": [
              "string",
              "null"
            ],
            "example": "rss"
          },
          "rawDescriptionLength": {
            "type": [
              "integer",
              "null"
            ],
            "example": 240
          },
          "bodyHtmlRawLength": {
            "type": [
              "integer",
              "null"
            ],
            "example": 1280
          },
          "articleHtmlLength": {
            "type": [
              "integer",
              "null"
            ],
            "example": 1100
          },
          "hasBlockTags": {
            "type": [
              "boolean",
              "null"
            ],
            "example": true
          },
          "looksEscapedHtml": {
            "type": [
              "boolean",
              "null"
            ],
            "example": false
          },
          "weakContent": {
            "type": [
              "boolean",
              "null"
            ],
            "example": false
          },
          "articleHtmlPreview": {
            "type": [
              "string",
              "null"
            ],
            "example": "<p>Example</p>"
          },
          "recordedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "example": "2025-01-20T10:01:30.000Z"
          }
        }
      },
      "IngestionDiagnosticsList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngestionDiagnosticEntry"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "SessionCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "lkd_session",
        "description": "Sessão autenticada emitida após login com Google."
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Session token",
        "description": "Token de sessão transmitido via cabeçalho Authorization."
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Requisição inválida (parâmetros ou payload incorretos).",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorEnvelope"
            },
            "examples": {
              "invalidInput": {
                "summary": "Valor inválido informado",
                "value": {
                  "success": false,
                  "error": {
                    "code": "INVALID_INPUT",
                    "message": "Invalid input data"
                  },
                  "meta": {
                    "requestId": "00000000-0000-4000-8000-000000000000"
                  }
                }
              },
              "urlRequired": {
                "summary": "URL obrigatória",
                "value": {
                  "success": false,
                  "error": {
                    "code": "URL_REQUIRED",
                    "message": "URL is required"
                  },
                  "meta": {
                    "requestId": "00000000-0000-4000-8000-000000000000"
                  }
                }
              },
              "invalidCursor": {
                "summary": "Cursor de paginação inválido",
                "value": {
                  "success": false,
                  "error": {
                    "code": "INVALID_CURSOR",
                    "message": "Invalid pagination cursor"
                  },
                  "meta": {
                    "requestId": "00000000-0000-4000-8000-000000000000"
                  }
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Autenticação requerida.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorEnvelope"
            },
            "example": {
              "success": false,
              "error": {
                "code": "UNAUTHENTICATED",
                "message": "Authentication required"
              },
              "meta": {
                "requestId": "00000000-0000-4000-8000-000000000000"
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Usuário autenticado sem permissão suficiente.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorEnvelope"
            },
            "example": {
              "success": false,
              "error": {
                "code": "FORBIDDEN",
                "message": "Insufficient permissions"
              },
              "meta": {
                "requestId": "00000000-0000-4000-8000-000000000000"
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Recurso não encontrado.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorEnvelope"
            },
            "example": {
              "success": false,
              "error": {
                "code": "FEED_NOT_FOUND",
                "message": "Feed not found"
              },
              "meta": {
                "requestId": "00000000-0000-4000-8000-000000000000"
              }
            }
          }
        }
      },
      "Conflict": {
        "description": "Estado atual do recurso impede a operação.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorEnvelope"
            },
            "example": {
              "success": false,
              "error": {
                "code": "FEED_ALREADY_EXISTS",
                "message": "Feed already exists for this user"
              },
              "meta": {
                "requestId": "00000000-0000-4000-8000-000000000000"
              }
            }
          }
        }
      },
      "PayloadTooLarge": {
        "description": "Carga enviada excede os limites da API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorEnvelope"
            },
            "example": {
              "success": false,
              "error": {
                "code": "PAYLOAD_TOO_LARGE",
                "message": "A maximum of 25 feeds can be created per request"
              },
              "meta": {
                "requestId": "00000000-0000-4000-8000-000000000000"
              }
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "A requisição foi bem formada, mas viola regras de negócio.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorEnvelope"
            },
            "example": {
              "success": false,
              "error": {
                "code": "POSTS_TIME_WINDOW_DAYS_TOO_LOW",
                "message": "posts_time_window_days must be greater than or equal to 1"
              },
              "meta": {
                "requestId": "00000000-0000-4000-8000-000000000000"
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/health/live": {
      "get": {
        "summary": "Liveness probe",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "Application is alive",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "summary": "Readiness probe",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "Application is ready to receive traffic"
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Export Prometheus metrics",
        "description": "Retorna as métricas coletadas em formato texto compatível com Prometheus.",
        "tags": [
          "Observability"
        ],
        "responses": {
          "200": {
            "description": "Métricas atuais da aplicação",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "# HELP http_requests_total Total de requisições HTTP\n# TYPE http_requests_total counter\nhttp_requests_total{method=\"get\",route=\"/health/live\",status=\"200\"} 42\n"
              }
            }
          },
          "404": {
            "description": "Coleta de métricas desabilitada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/allowlist": {
      "get": {
        "summary": "List allowed users with pagination",
        "tags": [
          "Allowlist"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "integer",
              "nullable": true
            },
            "description": "Cursor retornado em respostas anteriores para continuar a paginação."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "description": "Quantidade de registros por página (padrão 20, máximo 50)."
          }
        ],
        "responses": {
          "200": {
            "description": "Lista paginada de usuários autorizados",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AllowlistListResponse"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "data": {
                        "items": [
                          {
                            "id": 1,
                            "email": "admin@example.com",
                            "role": "admin",
                            "immutable": true,
                            "createdAt": "2025-01-10T12:00:00.000Z",
                            "updatedAt": "2025-01-11T09:30:00.000Z"
                          }
                        ]
                      },
                      "meta": {
                        "requestId": "00000000-0000-4000-8000-000000000001",
                        "nextCursor": null,
                        "total": 1,
                        "limit": 20
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Add a new user to the allowlist",
        "tags": [
          "Allowlist"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowlistCreateRequest"
              },
              "examples": {
                "create": {
                  "value": {
                    "email": "editor@example.com",
                    "role": "editor"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário adicionado à allowlist",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AllowedUser"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "created": {
                    "value": {
                      "success": true,
                      "data": {
                        "id": 2,
                        "email": "editor@example.com",
                        "role": "editor",
                        "immutable": false,
                        "createdAt": "2025-01-20T12:30:00.000Z",
                        "updatedAt": "2025-01-20T12:30:00.000Z"
                      },
                      "meta": {
                        "requestId": "00000000-0000-4000-8000-000000000002"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      }
    },
    "/api/v1/allowlist/{id}": {
      "patch": {
        "summary": "Update the role of an allowlisted user",
        "tags": [
          "Allowlist"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowlistUpdateRoleRequest"
              },
              "examples": {
                "update": {
                  "value": {
                    "role": "admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Papel atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AllowedUser"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "updated": {
                    "value": {
                      "success": true,
                      "data": {
                        "id": 2,
                        "email": "editor@example.com",
                        "role": "admin",
                        "immutable": false,
                        "createdAt": "2025-01-20T12:30:00.000Z",
                        "updatedAt": "2025-01-21T08:15:00.000Z"
                      },
                      "meta": {
                        "requestId": "00000000-0000-4000-8000-000000000003"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Remove an allowlisted user",
        "tags": [
          "Allowlist"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário removido da allowlist",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AllowlistRemovalResult"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "removed": {
                    "value": {
                      "success": true,
                      "data": {
                        "message": "Allowlist entry removed"
                      },
                      "meta": {
                        "requestId": "00000000-0000-4000-8000-000000000004"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/app-params": {
      "get": {
        "summary": "Retrieve application-wide parameters",
        "description": "Retorna parâmetros globais utilizados por toda a aplicação, independentes do usuário autenticado.",
        "tags": [
          "Application Parameters"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Parâmetros globais atuais",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppParams"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "default": {
                    "summary": "Valores padrão",
                    "value": {
                      "success": true,
                      "data": {
                        "posts_refresh_cooldown_seconds": 3600,
                        "posts_time_window_days": 7,
                        "updated_at": "2025-01-20T12:34:56.000Z"
                      },
                      "meta": {
                        "requestId": "00000000-0000-4000-8000-000000000000"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update application-wide parameters",
        "description": "Permite que administradores atualizem um ou mais parâmetros globais.",
        "tags": [
          "Application Parameters"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "posts_refresh_cooldown_seconds": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "posts_time_window_days": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              },
              "examples": {
                "updateCooldown": {
                  "summary": "Ajuste de cooldown",
                  "value": {
                    "posts_refresh_cooldown_seconds": 1800
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Parâmetros atualizados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppParams"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "updated": {
                    "value": {
                      "success": true,
                      "data": {
                        "posts_refresh_cooldown_seconds": 1800,
                        "posts_time_window_days": 7,
                        "updated_at": "2025-01-21T09:15:00.000Z",
                        "updated_by": "admin@example.com"
                      },
                      "meta": {
                        "requestId": "00000000-0000-4000-8000-000000000000"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      },
      "patch": {
        "summary": "Partially update application-wide parameters",
        "tags": [
          "Application Parameters"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "posts_refresh_cooldown_seconds": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "posts_time_window_days": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Parâmetros atualizados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppParams"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/api/v1/auth/login/google": {
      "post": {
        "summary": "Authenticate using a Google ID token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthGoogleLoginRequest"
              },
              "examples": {
                "login": {
                  "value": {
                    "idToken": "ya29.a0AfH6SMCg..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "description": "Cookie de sessão emitido após autenticação bem-sucedida."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AuthSession"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "data": {
                        "email": "user@example.com",
                        "role": "editor",
                        "expiresAt": "2025-01-20T13:45:00.000Z"
                      },
                      "meta": {
                        "requestId": "00000000-0000-4000-8000-000000000010"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "summary": "Invalidate the current session",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout efetuado",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AuthLogoutResult"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "data": {
                        "message": "Logged out"
                      },
                      "meta": {
                        "requestId": "00000000-0000-4000-8000-000000000011"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "summary": "Retrieve the authenticated user session",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sessão válida",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AuthSession"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "me": {
                    "value": {
                      "success": true,
                      "data": {
                        "email": "user@example.com",
                        "role": "editor",
                        "expiresAt": "2025-01-20T13:45:00.000Z"
                      },
                      "meta": {
                        "requestId": "00000000-0000-4000-8000-000000000012"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/auth/debug": {
      "get": {
        "summary": "Inspect authentication cookies (feature flag controlled)",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Detalhes sobre o estado de autenticação detectado",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AuthDebugReport"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/diagnostics/ingestion": {
      "get": {
        "summary": "List the most recent ingestion diagnostics",
        "description": "Disponibiliza os últimos eventos registrados pelo pipeline de ingestão para análise operacional.",
        "tags": [
          "Diagnostics"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Quantidade máxima de eventos retornados (padrão 20)."
          },
          {
            "in": "query",
            "name": "feedId",
            "schema": {
              "type": "integer",
              "nullable": true
            },
            "description": "Filtra eventos associados ao feed informado."
          }
        ],
        "responses": {
          "200": {
            "description": "Eventos recentes do pipeline de ingestão",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionDiagnosticsList"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "data": {
                        "items": [
                          {
                            "itemId": 101,
                            "feedId": 1,
                            "feedTitle": "Example Feed",
                            "itemTitle": "Example item",
                            "canonicalUrl": "https://example.com/item-101",
                            "publishedAt": "2025-01-20T10:00:00.000Z",
                            "chosenSource": "rss",
                            "rawDescriptionLength": 240,
                            "bodyHtmlRawLength": 1280,
                            "articleHtmlLength": 1100,
                            "hasBlockTags": true,
                            "looksEscapedHtml": false,
                            "weakContent": false,
                            "articleHtmlPreview": "<p>Example</p>",
                            "recordedAt": "2025-01-20T10:01:30.000Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/api/v1/feeds": {
      "get": {
        "summary": "List RSS feeds owned by the authenticated user",
        "description": "Retorna os feeds cadastrados pelo usuário autenticado usando envelope padronizado e paginação baseada em cursor.",
        "tags": [
          "Feeds"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "Cursor retornado em chamadas anteriores para continuar a paginação."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "description": "Quantidade máxima de feeds retornados por página (padrão 20, limite 50)."
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of feeds",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Feed"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "nextCursor": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Cursor da próxima página ou null quando não há mais resultados."
                            },
                            "total": {
                              "type": "integer",
                              "description": "Total de feeds cadastrados para o usuário."
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Limite efetivamente aplicado."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Lista paginada de feeds",
                    "value": {
                      "success": true,
                      "data": {
                        "items": [
                          {
                            "id": 1,
                            "url": "https://example.com/rss.xml",
                            "title": "Example RSS",
                            "lastFetchedAt": "2025-01-20T12:00:00.000Z",
                            "createdAt": "2025-01-10T09:30:00.000Z",
                            "updatedAt": "2025-01-18T08:15:00.000Z"
                          }
                        ]
                      },
                      "meta": {
                        "requestId": "11111111-2222-4333-8444-555555555555",
                        "nextCursor": "2",
                        "total": 3,
                        "limit": 20
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/feeds/bulk": {
      "post": {
        "summary": "Create multiple RSS feeds in a single request",
        "description": "Recebe até 25 URLs por requisição, ignorando duplicadas e reportando entradas inválidas sem interromper o processamento.",
        "tags": [
          "Feeds"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "urls"
                ],
                "properties": {
                  "urls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              },
              "examples": {
                "sample": {
                  "value": {
                    "urls": [
                      "https://example.com/rss.xml",
                      "https://news.example.com/feed"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Result of the bulk creation request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FeedBulkResult"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "processed": {
                    "value": {
                      "success": true,
                      "data": {
                        "created": [
                          {
                            "id": 5,
                            "url": "https://example.com/rss.xml",
                            "title": null,
                            "lastFetchedAt": null,
                            "createdAt": "2025-01-20T12:34:56.000Z",
                            "updatedAt": "2025-01-20T12:34:56.000Z"
                          }
                        ],
                        "duplicates": [
                          {
                            "url": "https://example.com/rss.xml",
                            "reason": "ALREADY_EXISTS",
                            "feedId": 2
                          },
                          {
                            "url": "https://example.com/rss.xml",
                            "reason": "DUPLICATE_IN_PAYLOAD",
                            "feedId": null
                          }
                        ],
                        "invalid": [
                          {
                            "url": "notaurl",
                            "reason": "INVALID_URL"
                          },
                          {
                            "url": "",
                            "reason": "URL_REQUIRED"
                          }
                        ]
                      },
                      "meta": {
                        "requestId": "11111111-2222-4333-8444-555555555555"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "413": {
            "$ref": "#/components/responses/PayloadTooLarge"
          }
        }
      }
    },
    "/api/v1/feeds/{id}": {
      "patch": {
        "summary": "Update attributes of an existing feed",
        "description": "Permite atualizar URL e título de um feed pertencente ao usuário autenticado.",
        "tags": [
          "Feeds"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "examples": {
                "updateTitle": {
                  "value": {
                    "title": "Novo título"
                  }
                },
                "updateUrl": {
                  "value": {
                    "url": "https://example.com/rss.xml"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feed updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Feed"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "updated": {
                    "value": {
                      "success": true,
                      "data": {
                        "id": 2,
                        "url": "https://example.com/rss.xml",
                        "title": "Novo título",
                        "lastFetchedAt": "2025-01-18T08:15:00.000Z",
                        "createdAt": "2024-12-01T12:00:00.000Z",
                        "updatedAt": "2025-01-20T12:40:00.000Z"
                      },
                      "meta": {
                        "requestId": "99999999-8888-4777-8666-555555555555"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      },
      "delete": {
        "summary": "Remove a feed owned by the authenticated user",
        "description": "Exclui definitivamente o feed informado e os dados associados ao usuário autenticado.",
        "tags": [
          "Feeds"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feed removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FeedDeletionResult"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "removed": {
                    "value": {
                      "success": true,
                      "data": {
                        "message": "Feed removed"
                      },
                      "meta": {
                        "requestId": "22222222-3333-4444-8555-666666666666"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/feeds/reset": {
      "post": {
        "summary": "Reset RSS feed ingestion state",
        "description": "Remove todas as noticias e posts derivados dos feeds e reinicia o estado de processamento. Disponivel apenas para administradores.",
        "tags": [
          "Feeds"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Resultado do reset dos feeds",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FeedResetResult"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Reset concluido",
                    "value": {
                      "success": true,
                      "data": {
                        "feedsResetCount": 12,
                        "articlesDeletedCount": 480,
                        "postsDeletedCount": 480,
                        "durationMs": 85
                      },
                      "meta": {
                        "requestId": "11111111-2222-4333-8444-555555555555"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/api/v1/hello": {
      "get": {
        "summary": "Returns the hello message",
        "tags": [
          "Hello"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "hello mundo"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/posts/refresh": {
      "post": {
        "summary": "Refresh articles and generate posts from configured feeds",
        "description": "Consulta todos os feeds do usuário autenticado, aplica a janela de retenção configurada e cria posts placeholder para notícias recentes.",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh executed for every feed owned by the user",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FeedRefreshResponse"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "data": {
                        "now": "2025-01-20T12:34:56.000Z",
                        "feeds": [
                          {
                            "feedId": 1,
                            "feedUrl": "https://example.com/rss.xml",
                            "feedTitle": "Example RSS",
                            "skippedByCooldown": false,
                            "cooldownSecondsRemaining": 0,
                            "itemsRead": 12,
                            "itemsWithinWindow": 4,
                            "articlesCreated": 2,
                            "duplicates": 1,
                            "invalidItems": 0,
                            "error": null
                          },
                          {
                            "feedId": 2,
                            "feedUrl": "https://news.example.com/feed",
                            "feedTitle": null,
                            "skippedByCooldown": true,
                            "cooldownSecondsRemaining": 1800,
                            "itemsRead": 0,
                            "itemsWithinWindow": 0,
                            "articlesCreated": 0,
                            "duplicates": 0,
                            "invalidItems": 0,
                            "error": {
                              "message": "Feed request timed out"
                            }
                          }
                        ]
                      },
                      "meta": {
                        "requestId": "77777777-8888-4999-8aaa-bbbbbbbbbbbb"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/posts/cleanup": {
      "post": {
        "summary": "Delete old articles and posts outside the retention window",
        "description": "Remove artigos e posts vinculados aos feeds do usuário autenticado que estejam fora da janela de 7 dias utilizada pelo sistema.",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Cleanup executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PostsCleanupResult"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "data": {
                        "removedArticles": 6,
                        "removedPosts": 6
                      },
                      "meta": {
                        "requestId": "12345678-90ab-4cde-8fab-1234567890ab"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/posts": {
      "get": {
        "summary": "List generated posts derived from recent feed entries",
        "description": "Retorna artigos normalizados com o conteúdo de post correspondente, aplicando ordenação decrescente por data e paginação por cursor.",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "SessionCookie": []
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "Cursor de paginação retornado em chamadas anteriores."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "description": "Quantidade de itens por página (padrão 20, máximo 50)."
          },
          {
            "in": "query",
            "name": "feedId",
            "schema": {
              "type": "integer"
            },
            "description": "Filtra os artigos pertencentes ao feed informado."
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of recent posts",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PostListResponse"
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "nextCursor": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Cursor para a próxima página ou null ao final da lista."
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Limite aplicado à consulta."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "data": {
                        "items": [
                          {
                            "id": 101,
                            "title": "Nova parceria anunciada",
                            "contentSnippet": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
                            "publishedAt": "2025-01-20T09:00:00.000Z",
                            "feed": {
                              "id": 1,
                              "title": "Example RSS",
                              "url": "https://example.com/rss.xml"
                            },
                            "post": {
                              "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
                              "createdAt": "2025-01-20T12:35:00.000Z"
                            }
                          },
                          {
                            "id": 102,
                            "title": "Tech Weekly 42",
                            "contentSnippet": "Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                            "publishedAt": "2025-01-19T17:30:00.000Z",
                            "feed": {
                              "id": 2,
                              "title": null,
                              "url": "https://news.example.com/feed"
                            },
                            "post": null
                          }
                        ]
                      },
                      "meta": {
                        "requestId": "55555555-6666-4777-8888-999999999999",
                        "nextCursor": "MjAyNS0wMS0xOVQxNzozMDowMC4wMDBaOjEwMg==",
                        "limit": 20
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "tags": []
}